name: Manual Test

# Allow manual triggering for testing
on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - build-only
        - test-only
        - lint-only
        - skip-simulation
      debug_mode:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean

env:
  GO_VERSION: '1.21'

jobs:
  manual-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug info
      if: ${{ inputs.debug_mode }}
      run: |
        echo "🔍 DEBUG INFORMATION"
        echo "==================="
        echo "Test type: ${{ inputs.test_type }}"
        echo "Debug mode: ${{ inputs.debug_mode }}"
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "SHA: ${{ github.sha }}"
        echo ""
        echo "📂 Repository structure:"
        find . -type f -name "*.go" | head -10
        echo ""
        echo "📦 Go modules:"
        cat go.mod 2>/dev/null || echo "No go.mod found"
        
    - name: Simulate skip scenario
      if: ${{ inputs.test_type == 'skip-simulation' }}
      run: |
        echo "✅ Simulating skip scenario for non-Go changes"
        echo "This is what happens when only docs/VSCode extension files change"
        echo "Total time: ~10-15 seconds"
        echo "vs. old workflow: ~8-10 minutes"
        
    - name: Set up Go (if needed)
      if: ${{ inputs.test_type != 'skip-simulation' }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Build Go packages only
      if: ${{ inputs.test_type == 'build-only' || inputs.test_type == 'full' }}
      run: |
        if find . -name "main.go" | grep -q .; then
          echo "🔨 Building Go packages..."
          go build ./...
        else
          echo "📝 No main packages found yet"
        fi
        
    - name: Run Go tests only  
      if: ${{ inputs.test_type == 'test-only' || inputs.test_type == 'full' }}
      run: |
        if find . -name "*_test.go" | grep -q .; then
          echo "🧪 Running tests..."
          go test -v ./...
        else
          echo "📝 No tests found yet"
        fi
        
    - name: Run Go linting only
      if: ${{ inputs.test_type == 'lint-only' || inputs.test_type == 'full' }}
      run: |
        if find . -name "*.go" | grep -q .; then
          echo "🔍 Installing linting tools..."
          go install golang.org/x/tools/cmd/goimports@latest
          echo "🔍 Checking formatting..."
          goimports -l . | tee /tmp/goimports.out
          if [ -s /tmp/goimports.out ]; then
            echo "⚠️ Formatting issues found (not failing in manual test)"
          else
            echo "✅ Code is properly formatted"
          fi
        else
          echo "📝 No Go files found to lint"
        fi
        
    - name: Performance summary
      run: |
        echo "## 📊 Performance Summary" >> $GITHUB_STEP_SUMMARY
        echo "Test type: **${{ inputs.test_type }}**" >> $GITHUB_STEP_SUMMARY
        echo "Completed in: **$(date)**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ⚡ Performance Benefits" >> $GITHUB_STEP_SUMMARY
        echo "- **Caching**: Go modules, ANTLR, tools cached" >> $GITHUB_STEP_SUMMARY
        echo "- **Parallel execution**: Build, test, lint run simultaneously" >> $GITHUB_STEP_SUMMARY
        echo "- **Smart skipping**: Non-Go changes complete in seconds" >> $GITHUB_STEP_SUMMARY
        echo "- **Consolidated**: Single workflow vs 3 separate workflows" >> $GITHUB_STEP_SUMMARY