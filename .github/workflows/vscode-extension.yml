name: Vex Extension

on:
  push:
    branches: [ main, feature/vscode-extension-clean ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  # Detect changes to extension files
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      extension-files: ${{ steps.changes.outputs.extension-files }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Detect VSCode extension file changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          extension-files:
            - 'vscode-extension/**'
            - 'examples/**/*.vx'

  # Skip job for non-extension changes
  skip-validation:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.extension-files == 'false' }}
    steps:
    - name: Skip VSCode extension validation
      run: |
        echo "[SKIP] Skipping VSCode extension validation - no extension files changed"
        echo "Changed files are only: Go code, CI workflows, docs, etc."

  # Main extension validation
  validate:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.extension-files == 'true' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'vscode-extension/package.json'
        
    - name: Install VSCode extension dependencies
      run: |
        cd vscode-extension
        npm install
        
    - name: Install extension development tools
      run: |
        npm install -g eslint prettier
        # Install specific vsce version that's compatible with Node 20
        npm install -g @vscode/vsce@latest
        
    - name: Lint VSCode extension JavaScript
      run: .github/scripts/extension/lint-javascript.sh
        
    - name: Check VSCode extension code formatting
      run: .github/scripts/extension/check-formatting.sh
        
    - name: Validate VSCode extension manifest
      run: .github/scripts/extension/validate-manifest.js
        
    - name: Validate Vex syntax highlighting grammar
      run: .github/scripts/extension/validate-grammar.js
        
    - name: Validate Vex color themes
      run: .github/scripts/extension/validate-themes.js
        
    - name: Set up Go (for extension testing)
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Test syntax highlighting with sample Vex code
      run: |
        cd vscode-extension
        # Build and use extension tester
        cd ../tools/extension-tester
        go build -o extension-tester .
        cd ../../vscode-extension
        ../tools/extension-tester/extension-tester create-samples
        
    - name: Package VSCode extension (.vsix)
      run: |
        cd vscode-extension
        ../tools/extension-tester/extension-tester package
        
    - name: Verify VSCode extension package integrity
      run: |
        cd vscode-extension
        ../tools/extension-tester/extension-tester verify
        
    - name: Upload VSCode extension artifact
      uses: actions/upload-artifact@v4
      with:
        name: vex-vscode-extension-build
        path: vscode-extension/vex-test-build.vsix
        retention-days: 7

  # Summary job
  summary:
    runs-on: ubuntu-latest
    needs: [detect-changes, skip-validation, validate]
    if: always()
    steps:
    - name: Set up Go (for summary)
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Report VSCode extension validation results
      env:
        EXTENSION_FILES: ${{ needs.detect-changes.outputs.extension-files }}
        VALIDATE_RESULT: ${{ needs.validate.result }}
        SKIP_RESULT: ${{ needs.skip-validation.result }}
      run: |
        cd tools/extension-tester
        go build -o extension-tester .
        ./extension-tester summary >> $GITHUB_STEP_SUMMARY