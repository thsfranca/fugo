---
name: Auto Release on PR Labels

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write
  pull-requests: read
  actions: write
  issues: write
  repository-projects: write

jobs:
  auto-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Check for release labels
        id: check-labels
        run: |
          chmod +x .github/scripts/auto-release/check-release-labels.sh
          .github/scripts/auto-release/check-release-labels.sh \
            '${{ toJson(github.event.pull_request.labels.*.name) }}' \
            '${{ github.event.pull_request.number }}' \
            '${{ github.event.pull_request.title }}'

      - name: Configure Git
        if: steps.check-labels.outputs.release-type != 'none'
        run: |
          chmod +x .github/scripts/auto-release/configure-git.sh
          .github/scripts/auto-release/configure-git.sh

      - name: Bump version
        if: steps.check-labels.outputs.release-type != 'none'
        id: bump-version
        run: |
          chmod +x .github/scripts/auto-release/bump-version.sh
          .github/scripts/auto-release/bump-version.sh \
            '${{ steps.check-labels.outputs.release-type }}'

      - name: Create release commit and tag
        if: steps.check-labels.outputs.release-type != 'none'
        run: |
          chmod +x ./scripts/create-release-tag.sh
          ./scripts/create-release-tag.sh \
            "${{ steps.bump-version.outputs.new-version }}" \
            "${{ steps.bump-version.outputs.old-version }}" \
            "${{ github.event.pull_request.number }}" \
            "${{ steps.check-labels.outputs.release-type }}"

      - name: Create release notes
        if: steps.check-labels.outputs.release-type != 'none'
        run: |
          chmod +x .github/scripts/auto-release/create-release-notes.sh
          .github/scripts/auto-release/create-release-notes.sh \
            "${{ steps.bump-version.outputs.new-version }}" \
            "${{ steps.bump-version.outputs.old-version }}" \
            "${{ github.event.pull_request.number }}" \
            "${{ github.event.pull_request.title }}" \
            "${{ github.event.pull_request.body }}" \
            "${{ github.event.pull_request.user.login }}" \
            "${{ steps.check-labels.outputs.release-type }}"

      - name: Create GitHub Release
        if: steps.check-labels.outputs.release-type != 'none'
        run: |
          chmod +x .github/scripts/release/create-github-release.sh
          .github/scripts/release/create-github-release.sh \
            "${{ steps.bump-version.outputs.new-version }}" \
            "${{ steps.check-labels.outputs.release-type }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Success notification
        if: steps.check-labels.outputs.release-type != 'none'
        run: |
          chmod +x .github/scripts/auto-release/success-notification.sh
          .github/scripts/auto-release/success-notification.sh \
            "${{ steps.bump-version.outputs.old-version }}" \
            "${{ steps.bump-version.outputs.new-version }}" \
            "${{ github.event.pull_request.number }}" \
            "${{ steps.check-labels.outputs.release-type }}"